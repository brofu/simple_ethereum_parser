// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/brofu/simple_ethereum_parser/packages/ethereum (interfaces: EthereumChainAccesser)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	ethereum "github.com/brofu/simple_ethereum_parser/packages/ethereum"
	gomock "github.com/golang/mock/gomock"
)

// MockEthereumChainAccesser is a mock of EthereumChainAccesser interface.
type MockEthereumChainAccesser struct {
	ctrl     *gomock.Controller
	recorder *MockEthereumChainAccesserMockRecorder
}

// MockEthereumChainAccesserMockRecorder is the mock recorder for MockEthereumChainAccesser.
type MockEthereumChainAccesserMockRecorder struct {
	mock *MockEthereumChainAccesser
}

// NewMockEthereumChainAccesser creates a new mock instance.
func NewMockEthereumChainAccesser(ctrl *gomock.Controller) *MockEthereumChainAccesser {
	mock := &MockEthereumChainAccesser{ctrl: ctrl}
	mock.recorder = &MockEthereumChainAccesserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEthereumChainAccesser) EXPECT() *MockEthereumChainAccesserMockRecorder {
	return m.recorder
}

// EthGetCurrentBlockNumber mocks base method.
func (m *MockEthereumChainAccesser) EthGetCurrentBlockNumber(arg0 context.Context, arg1 *ethereum.EthGetCurrentBlockNumberRequest) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EthGetCurrentBlockNumber", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EthGetCurrentBlockNumber indicates an expected call of EthGetCurrentBlockNumber.
func (mr *MockEthereumChainAccesserMockRecorder) EthGetCurrentBlockNumber(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EthGetCurrentBlockNumber", reflect.TypeOf((*MockEthereumChainAccesser)(nil).EthGetCurrentBlockNumber), arg0, arg1)
}

// EthGetCurrentTransactionsByAddress mocks base method.
func (m *MockEthereumChainAccesser) EthGetCurrentTransactionsByAddress(arg0 context.Context, arg1 *ethereum.EthGetCurrentTransactionsByAddressRequest) ([]ethereum.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EthGetCurrentTransactionsByAddress", arg0, arg1)
	ret0, _ := ret[0].([]ethereum.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EthGetCurrentTransactionsByAddress indicates an expected call of EthGetCurrentTransactionsByAddress.
func (mr *MockEthereumChainAccesserMockRecorder) EthGetCurrentTransactionsByAddress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EthGetCurrentTransactionsByAddress", reflect.TypeOf((*MockEthereumChainAccesser)(nil).EthGetCurrentTransactionsByAddress), arg0, arg1)
}
